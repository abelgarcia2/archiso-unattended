#!/bin/bash

readonly USB_DEVICE_ID="ata-VBOX_HARDDISK_VBc97770ca-2e3eabdb" # For encrypted /boot and LUKS header
readonly USB_DEVICE="/dev/disk/by-id/$USB_DEVICE_ID"

readonly MAIN_DRIVE_ID="ata-VBOX_HARDDISK_VBc6278c2a-190d4419" 
readonly MAIN_DRIVE_DEVICE="/dev/disk/by-id/$MAIN_DRIVE_ID" 

readonly EXT4_UNENCRYPTED=1

readonly LVM_UNENCRYPTED=2
readonly LVM_ENCRYPTED=3

installation_type=$EXT4_UNENCRYPTED
encryption_key=""

usage() {
    echo "Uso: $0 --parametro1 <valor1> --parametro2 <valor2> ... --parametron <valorn>"
    exit 1
}

post_install() {
    echo "Creating fstab..."
    genfstab -U /mnt >> /mnt/etc/fstab

    echo "Chroot..."
    arch-chroot /mnt /bin/bash << EOF
        echo "Setting timezone..."
        ln -sf /usr/share/zoneinfo/Europe/Madrid /etc/localtime

        echo "Setting hardware clock"
        hwclock --systohc

        sed -i "/en_US.UTF-8\|es_ES.UTF-8/s/^#//" /etc/locale.gen
        locale-gen

        echo "Setting default lang..."
        echo -e "LANG=es_ES.UTF-8\nLC_MESSAGES=en_US.UTF-8" > /etc/locale.conf

        echo "Setting hostname..."
        echo abdn > /etc/hostname
EOF
}

add_lvm2_hook() {
    arch-chroot /mnt /bin/bash << EOF
        echo "Adding lvm2 hook..."
        sed -ri "s/(^HOOKS=.*)(block)(.*)(filesystems)/\1\2 lvm2 \4/" /etc/mkinitcpio.conf
EOF
}

add_encrypt_hook() {
    arch-chroot /mnt /bin/bash << EOF
        echo "Adding encrypt hook..."
        sed -ri "s/(^HOOKS=.*)(block)(.*)(lvm2)/\1\2 encrypt \4/" /etc/mkinitcpio.conf
EOF
}

regenerate_initramfs() {
    arch-chroot /mnt /bin/bash << EOF
        echo "Regenerating initramfs..."
        mkinitcpio -P
EOF
}


install_grub() {
    arch-chroot /mnt /bin/bash << EOF 
        echo "Installing and configuring GRUB..."
        pacman -S --noconfirm grub efibootmgr
        grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=ArchLinuxGRUB

        if [ $installation_type -eq $LVM_ENCRYPTED ]; then
            uuid=\$(blkid -t PARTLABEL=ArchLVM|awk '{print \$2}'|tr -d \")
            sed -i "s/^GRUB_CMDLINE_LINUX_DEFAULT=\"[^\"]*/& cryptdevice=\$uuid:cryptlvm/" /etc/default/grub
        fi

        if [ $installation_type -eq $LVM_UNENCRYPTED ] || [ $installation_type -eq $LVM_ENCRYPTED ]; then
            sed -i 's/^GRUB_CMDLINE_LINUX_DEFAULT="[^"]*/& root=\/dev\/ArchLinuxVG\/root/' /etc/default/grub
        fi

        grub-mkconfig -o /boot/grub/grub.cfg
EOF
}

while [[ "$#" -gt 0 ]]; do
    case $1 in
        --installation_type)
            installation_type="$2";
            shift ;;
        --encryption_key)
            encryption_key="$2";
            shift ;;
        *)
            usage ;;
    esac
    shift
done

if [[ -z "$installation_type" || ($installation_type -eq $LVM_ENCRYPTED) && (-z $encryption_key) ]]; then
    usage
fi

echo "Running unattended archlinux installation at $(date --rfc-3339=seconds)..."

sleep 1

echo "Testing internet connection..."
if ! ping -c 1 archlinux.org > /dev/null 2>&1; then
    echo "[unattended-install] ERROR: No Internet Connection. Please check your connection and try again."
    exit 1
fi

case $installation_type in
    $EXT4_UNENCRYPTED)
        echo "Using unencrypted ext4 partitions"
        sleep .5
        echo "Creating partitions..."
        sfdisk \
            --wipe-partitions always \
            --backup \
            $MAIN_DRIVE_DEVICE << EOF
            label: gpt
            size=1G,type=uefi,name=ArchBoot
            size=16G,type=swap,name=ArchSwap
            size=50G,type=linux,name=ArchRoot
            size=-,type=linux,name=ArchHome
EOF

        sleep .1

        echo "Formatting partitions"
        mkfs.fat -F 32 /dev/disk/by-partlabel/ArchBoot
        mkswap /dev/disk/by-partlabel/ArchSwap
        mkfs.ext4 /dev/disk/by-partlabel/ArchRoot
        mkfs.ext4 /dev/disk/by-partlabel/ArchHome

        mount /dev/disk/by-partlabel/ArchRoot /mnt

        echo "Creating mountpoints..."
        mkdir /mnt/boot /mnt/home

        echo "Mounting partitions..."
        mount /dev/disk/by-partlabel/ArchBoot /mnt/boot
        mount /dev/disk/by-partlabel/ArchHome /mnt/home

        echo "Enabling swap..."
        swapon /dev/disk/by-partlabel/ArchSwap

        echo "Installing base packages..."
        pacstrap -K /mnt base linux linux-firmware vim man-db man-pages texinfo

        post_install
        install_grub
        ;;
    $LVM_UNENCRYPTED)
        echo "Using unencrypted lvm partitions"
        sleep .5
        echo "Wiping previous signatures..."
        wipefs --all $MAIN_DRIVE_DEVICE
        echo "Creating boot partition..."
        sfdisk \
            --wipe-partitions always \
            --backup \
            $MAIN_DRIVE_DEVICE << EOF
            label: gpt
            size=1G,type=uefi,name=ArchBoot
            size=-,type=lvm,name=ArchLVM
EOF
        sleep .1

        echo "Creating physical volume..."
        pvcreate /dev/disk/by-partlabel/ArchLVM
        echo "Creating volume group..."
        vgcreate ArchLinuxVG /dev/disk/by-partlabel/ArchLVM
        echo "Creating logical volumes..."
        lvcreate --yes -L 16G -n swap /dev/ArchLinuxVG
        lvcreate --yes -L 50G -n root /dev/ArchLinuxVG
        lvcreate --yes -l 100%FREE -n home /dev/ArchLinuxVG

        echo "Formatting partitions"
        mkfs.fat -F 32 /dev/disk/by-partlabel/ArchBoot
        mkswap /dev/ArchLinuxVG/swap
        mkfs.ext4 /dev/ArchLinuxVG/root
        mkfs.ext4 /dev/ArchLinuxVG/home

        mount /dev/ArchLinuxVG/root /mnt

        echo "Creating mountpoints..."
        mkdir /mnt/boot /mnt/home

        echo "Mounting partitions..."
        mount /dev/disk/by-partlabel/ArchBoot /mnt/boot
        mount /dev/ArchLinuxVG/home /mnt/home

        echo "Enabling swap..."
        swapon /dev/ArchLinuxVG/swap

        echo "Installing base packages..."
        pacstrap -K /mnt base linux linux-firmware vim lvm2 man-db man-pages texinfo

        post_install
        add_lvm2_hook
        regenerate_initramfs
        install_grub
        ;;
    $LVM_ENCRYPTED)
        echo "Using encrypted lvm partitions"
        sleep .5
        echo "Wiping previous signatures..."
        wipefs --all $MAIN_DRIVE_DEVICE
        echo "Creating boot partition..."
        sfdisk \
            --wipe-partitions always \
            --backup \
            $MAIN_DRIVE_DEVICE << EOF
            label: gpt
            size=1G,type=uefi,name=ArchBoot
            size=-,type=lvm,name=ArchLVM
EOF
        sleep .1

        echo "Encrypting partition..."
        echo $encryption_key | cryptsetup luksFormat /dev/disk/by-partlabel/ArchLVM
        echo "Open encrypted partition..."
        echo $encryption_key | cryptsetup open /dev/disk/by-partlabel/ArchLVM cryptlvm

        echo "Creating physical volume..."
        pvcreate /dev/mapper/cryptlvm
        echo "Creating volume group..."
        vgcreate ArchLinuxVG /dev/mapper/cryptlvm
        echo "Creating logical volumes..."
        lvcreate --yes -L 16G -n swap /dev/ArchLinuxVG
        lvcreate --yes -L 50G -n root /dev/ArchLinuxVG
        lvcreate --yes -l 100%FREE -n home /dev/ArchLinuxVG

        echo "Formatting partitions"
        mkfs.fat -F 32 /dev/disk/by-partlabel/ArchBoot
        mkswap /dev/ArchLinuxVG/swap
        mkfs.ext4 /dev/ArchLinuxVG/root
        mkfs.ext4 /dev/ArchLinuxVG/home

        mount /dev/ArchLinuxVG/root /mnt

        echo "Creating mountpoints..."
        mkdir /mnt/boot /mnt/home

        echo "Mounting partitions..."
        mount /dev/disk/by-partlabel/ArchBoot /mnt/boot
        mount /dev/ArchLinuxVG/home /mnt/home

        echo "Enabling swap..."
        swapon /dev/ArchLinuxVG/swap

        echo "Installing base packages..."
        pacstrap -K /mnt base linux linux-firmware vim lvm2 man-db man-pages texinfo

        post_install
        add_lvm2_hook
        add_encrypt_hook
        regenerate_initramfs
        install_grub
    ;;
    5)# experiment
    ;;
    *)
    ;;
esac
